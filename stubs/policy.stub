<?php

declare(strict_types=1);

namespace {{ namespace }};

use Illuminate\Auth\Access\HandlesAuthorization;
use {{ namespacedModel }};
use {{ namespacedUserModel }};
use Illuminate\Auth\Access\Response;

class {{ class }}
{
    use HandlesAuthorization;

    /**
     * @param  \{{ namespacedUserModel }}  $user
     * @return Response|bool
     */
    public function viewAny({{ user }} $user): Response|bool
    {
        //
    }

    /**
     * @param  \{{ namespacedUserModel }}  $user
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return Response|bool
     */
    public function view({{ user }} $user, {{ model }} ${{ modelVariable }}): Response|bool
    {
        //
    }

    /**
     * @param  \{{ namespacedUserModel }}  $user
     * @return Response|bool
     */
    public function create({{ user }} $user): Response|bool
    {
        //
    }

    /**
     * @param  \{{ namespacedUserModel }}  $user
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return Response|bool
     */
    public function update({{ user }} $user, {{ model }} ${{ modelVariable }}): Response|bool
    {
        //
    }

    /**
     * @param  \{{ namespacedUserModel }}  $user
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return Response|bool
     */
    public function delete({{ user }} $user, {{ model }} ${{ modelVariable }}): Response|bool
    {
        //
    }

    /**
     * @param  \{{ namespacedUserModel }}  $user
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return Response|bool
     */
    public function restore({{ user }} $user, {{ model }} ${{ modelVariable }}): Response|bool
    {
        //
    }

    /**
     * @param  \{{ namespacedUserModel }}  $user
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return Response|bool
     */
    public function forceDelete({{ user }} $user, {{ model }} ${{ modelVariable }}): Response|bool
    {
        //
    }
}
